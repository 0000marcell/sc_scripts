require 'test_helper'

class Api::V1::<%= @model_p_c %>ControllerTest < ActionDispatch::IntegrationTest
  def setup
    @users = [users(:root), users(:johndoe)]
    post '/api/v1/login', params: {username: @users[0].email,
                                  password: '123456'}
    response_json = JSON.parse(response.body)
    @header = {Authorization: "Bearer #{response_json['access_token']}"}
  end

  test "get all the <%= @model_p %>" do
    get "/api/v1/<%= @model_p %>", headers: @header  
    response_json = JSON.parse(response.body)
    assert_response :success
    assert_equal 2, response_json['data'].length
  end

  test "block access when not authorized" do
    get "/api/v1/<%= @model_p %>"
    assert_response 401
    response_json = JSON.parse(response.body)
    assert_equal response_json['error'], "Not authorized!"
  end
  
  test "get specific <%= @model_s %>" do
    get "/api/v1/<%= @model_p %>/1", headers: @header
    assert_response :success
    response_json = JSON.parse(response.body)
    assert_equal '<%= @attr %> 1', 
      response_json['data']['attributes']['<%= @attr %>']
  end

  test "create new <%= @model_s %>" do
    post "/api/v1/<%= @model_p %>", 
      params: { #TODO },
      headers: @header
    response_json = JSON.parse(response.body)
    assert_equal 'new <%= @attr %>', response_json['data']['attributes']['<%= @attr %>']
  end
  
  test "edit <%= @model_s %>" do
    patch "/api/v1/<%= @model_p %>/1", 
      params: { #TODO }, headers: @header
    get "/api/v1/<%= @model_p %>/1", headers: @header
    assert_response :success
    response_json = JSON.parse(response.body)
    assert_equal 'edited <%= @attr %>', 
      response_json['data']['attributes']['<%= @attr %>']
  end

  test "delete <%= @model_s %>" do
    delete "/api/v1/<%= @model_p %>/1",
      headers: @header 
    assert_response :success
  end
end
